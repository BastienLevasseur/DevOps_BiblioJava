# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "gitActions" ]
  pull_request:
    branches: [ "gitActions" ]

jobs:
  test-and-coverage:

    runs-on: ubuntu-latest

    steps:
    - name: Check the code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven  #car cache au dessus n'a pas l'air de fonctionner
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
  
    - name: Maven test 
      run: mvn clean test #clean et lance les tests

    - name: Generate code coverage report
      run: mvn jacoco:report

    - name: Upload the report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: target/site/jacoco/index.html
      
    - name: Generate JaCoCo Badge
      uses: cicirello/jacoco-badge-generator@v2.11.0
      with:
        generate-branches-badge: true
        badges-directory: .github/badges
        generate-coverage-badge: true
        coverage-badge-filename: jacoco.svg

    

    
  build:
    runs-on: ubuntu-latest
    needs: test-and-coverage
    steps:

    - name: Check the code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn package --file pom.xml

  
      
  # Build job
  gh-pages:
    runs-on: ubuntu-latest
    needs: test-and-coverage

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Generate maven site
        run: mvn site
        
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./target/site
          destination: ./_site
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: gh-pages

    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build-and-publish:
    runs-on: ubuntu-latest
    needs : build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Maven  
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Login to docker
        run: dockerlogin --username elsabn --password ${{ secrets.GH_PAT }} ghcr.io

      - name: Build image
        run: docker build . -t ghcr.io/elsabn/devops_bibliojava-ghcr:latest

      - name: Push image
        run: docker push ghcr.io/elsabn/devops_bibliojava-ghcr:latest
